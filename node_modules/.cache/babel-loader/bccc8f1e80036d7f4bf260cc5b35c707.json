{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increses(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggle() {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // const counterReducer = (state = initialstate, action) => {\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if (action.type === 'increses') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n//     if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n//     return state;\n// }\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer.reducer\n  }\n});\nexport const counterAction = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increses","action","payload","toggle","store","reducer","counterReducer","counterAction","actions"],"sources":["/home/kishan/worklog/redux-demo/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit'\n\nconst initialState = { counter: 0, showCounter: true }\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state){\n            state.counter++;\n        },\n        decrement(state){\n            state.counter--;\n        },\n        increses(state, action){\n            state.counter = state.counter + action.payload;\n        },\n        toggle(){\n            state.showCounter = !state.showCounter;\n        }\n    }\n})\n\n// const counterReducer = (state = initialstate, action) => {\n\n//     if (action.type === 'increment') {\n//         return {\n//             counter: state.counter + 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === 'decrement') {\n//         return {\n//             counter: state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === 'increses') {\n//         return {\n//             counter: state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if (action.type === 'toggle') {\n//         return {\n//             counter: state.counter,\n//             showCounter: !state.showCounter\n//         }\n//     }\n\n//     return state;\n\n// }\n\nconst store = configureStore({\n    reducer: {\n        counter: counterReducer.reducer\n    }\n});\n\nexport const counterAction = counterSlice.actions;\n\n\nexport default store;"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE;AAA3B,CAArB;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,SADuB;EAE7BJ,YAF6B;EAG7BK,QAAQ,EAAE;IACNC,SAAS,CAACC,KAAD,EAAO;MACZA,KAAK,CAACN,OAAN;IACH,CAHK;;IAINO,SAAS,CAACD,KAAD,EAAO;MACZA,KAAK,CAACN,OAAN;IACH,CANK;;IAONQ,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAe;MACnBH,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,OAAvC;IACH,CATK;;IAUNC,MAAM,GAAE;MACJL,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;IACH;;EAZK;AAHmB,CAAD,CAAhC,C,CAmBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,MAAMW,KAAK,GAAGf,cAAc,CAAC;EACzBgB,OAAO,EAAE;IACLb,OAAO,EAAEc,cAAc,CAACD;EADnB;AADgB,CAAD,CAA5B;AAMA,OAAO,MAAME,aAAa,GAAGb,YAAY,CAACc,OAAnC;AAGP,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}